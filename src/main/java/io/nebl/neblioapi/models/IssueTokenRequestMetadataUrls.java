/*
 * Neblio REST API Suite
 * APIs for Interacting with NTP1 Tokens & The Neblio Blockchain
 *
 * OpenAPI spec version: 1.2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.nebl.neblioapi.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * IssueTokenRequestMetadataUrls
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-03-04T01:28:12.717Z[UTC]")
public class IssueTokenRequestMetadataUrls {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_MIME_TYPE = "mimeType";
  @SerializedName(SERIALIZED_NAME_MIME_TYPE)
  private String mimeType;

  public static final String SERIALIZED_NAME_DATA_HASH = "dataHash";
  @SerializedName(SERIALIZED_NAME_DATA_HASH)
  private String dataHash;

  public IssueTokenRequestMetadataUrls name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the URL
   * @return name
  **/
  @ApiModelProperty(value = "Name of the URL")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public IssueTokenRequestMetadataUrls url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Actual URL
   * @return url
  **/
  @ApiModelProperty(value = "Actual URL")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public IssueTokenRequestMetadataUrls mimeType(String mimeType) {
    this.mimeType = mimeType;
    return this;
  }

   /**
   * mimeType of URL content
   * @return mimeType
  **/
  @ApiModelProperty(value = "mimeType of URL content")
  public String getMimeType() {
    return mimeType;
  }

  public void setMimeType(String mimeType) {
    this.mimeType = mimeType;
  }

  public IssueTokenRequestMetadataUrls dataHash(String dataHash) {
    this.dataHash = dataHash;
    return this;
  }

   /**
   * Hash of data at the URL, used for verification
   * @return dataHash
  **/
  @ApiModelProperty(value = "Hash of data at the URL, used for verification")
  public String getDataHash() {
    return dataHash;
  }

  public void setDataHash(String dataHash) {
    this.dataHash = dataHash;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IssueTokenRequestMetadataUrls issueTokenRequestMetadataUrls = (IssueTokenRequestMetadataUrls) o;
    return Objects.equals(this.name, issueTokenRequestMetadataUrls.name) &&
        Objects.equals(this.url, issueTokenRequestMetadataUrls.url) &&
        Objects.equals(this.mimeType, issueTokenRequestMetadataUrls.mimeType) &&
        Objects.equals(this.dataHash, issueTokenRequestMetadataUrls.dataHash);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, url, mimeType, dataHash);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IssueTokenRequestMetadataUrls {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    mimeType: ").append(toIndentedString(mimeType)).append("\n");
    sb.append("    dataHash: ").append(toIndentedString(dataHash)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

